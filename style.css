dt {
  font-weight: bold;
}

#sidebyside {
  display: flex;
  gap: 2em;
}

#sidebyside div + div {
  flex-grow: 1;
}

#stage {
  position: relative;
  border: 2px solid black;
  width: 100%;
  height: 82vh;
  --bottom: calc(82vh - 10vw);
  overflow: hidden;
}

#menu {
  max-width: 20vw;
}

#menu nav {
  font-size: 300%;
  filter: grayscale(1);
}

#menu nav a {
  text-decoration: none;
}

#menu #content {
  position: relative;
  padding: 1em;
}

#menu #content section {
  position: absolute;
  background-color: #fff;
}
/* 
#menu section.active {
  opacity: 1;
}

#menu section:not(.active) {
  opacity: 0;
} */

#container {
  position: absolute;
  outline: 4px dashed orange;
}

.container {
  height: 7vw;
  border: 2px dashed lightgray;
  position: relative;
  margin-bottom: 1em;
}

.container p {
  margin-top: 0;
}

.ball {
  position: absolute;
  width: 5vw;
  height: 5vw;
  bottom: 0;
  left: 0;
  background-image: url(beachball.svg);
  background-size: 100%;
}

.make-background {
  position: absolute;
  width: 56vw;
}

#ball {
  position: absolute;
  width: 10vw;
  height: 10vw;
  background-image: url(beachball.svg);
  background-size: 100%;
  /* outline: 2px dashed red; */
  /* transform: translateY( calc(82vh - 10vw)); */
}

#dialog {
  max-width: 25vw;
  padding: 2em;
  border-radius: 10px;
  box-shadow: 0px 0px 10px -4px #aaa;
}

#dialog h1 {
  font-size: 140%;
}

.clickable {
  cursor: pointer;
  text-decoration: underline;
}

.fall {
  animation: fall 1s linear infinite;
}

@keyframes fall {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(var(--bottom));
  }
}

#cart {
  font-size: 30px;
  position: absolute;
  left: 300px;
  top: 50px;
  background-color: lightsteelblue;

  padding: 10px 25px 10px 25px;
}

button#buy {
  padding: 8px;
  position: absolute;
  /* target coordinates:
  left: 303px;
  top: 60px; */
  /* Start coordinates */
  left: 80px;
  top: 200px;
}

/*----------------Squash and Stretch------------------*/
/* <p>Create the bounce and squash classes with keyframes.<br>
Bounce from translateY(0) to translateY(var(--bottom)).<br>
The trick is to only squash a tiny bit, and only during very few keyframes.</p> */

.bounce {
  animation: bounceAnimation 1s alternate infinite ease-in-out;
}

@keyframes bounceAnimation {
  0% {
    transform: translate(100px, 0);
  }
  95%,
  100% {
    transform: translate(100px, var(--bottom));
  }
}

.squash {
  animation: squashAnimation 1s alternate infinite ease-in-out;
}

@keyframes squashAnimation {
  0%,
  10% {
    transform: scale(1);
  }
  45%,
  80% {
    transform: scale(0.7, 1.2);
  }
  100% {
    transform: scale(1.08, 0.92);
  }
}

/*----------------Anticipation------------------*/
/* Create a disappear class with keyframe-animation that slides the dialog-box out the bottom of the screen.
Give it a cubic-bezier timing function that makes it go a little in the opposite direction first. */

.disappear {
  animation: aniticipationAnimation 3s cubic-bezier(0, -0.57, 0.82, 0.81);
}

@keyframes aniticipationAnimation {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(1000px);
  }
}

/*----------------Staging------------------*/
/* <p>Add CSS so that the <code>.active</code> class has an animation, e.g. slide in from the left.<br>
You can do it with just a simple transition rule on the element or container, it shouldn't be
necessary with a complete keyframe animation.</p> */

section {
  transform: translateX(-300px);
}

.active {
  transform: translateX(10px);
  transition-duration: 1s;
}

/*----------------Straight ahead vs pose to pos------------------*/
.posetopose {
  /* extremes: */
  /* transform: translate(170px, 350px); */
  /* transform: translate(275px, 150px); */
  /* transform: translate(380px, 350px); */
  /* transform: translate(450px, 250px); */
  /* transform: translate(510px, 350px); */
  /* transform: translate(560px, 300px); */
  /* transform: translate(600px, 350px); */

  animation: bouncePath 2.58s infinite forwards ease;
}

@keyframes bouncePath {
  0% {
    transform: translate(0);
  }
  30% {
    transform: translate(170px, 350px);
  }
  50% {
    transform: translate(275px, 150px);
  }
  60% {
    transform: translate(380px, 350px);
  }
  75% {
    transform: translate(450px, 250px);
  }
  85% {
    transform: translate(510px, 350px);
  }
  92% {
    transform: translate(560px, 300px);
  }
  100% {
    transform: translate(600px, 350px);
  }
}

/*----------------Slow in and slow out------------------*/
.show {
  transition: 1s cubic-bezier(0.46, -0.44, 1, 1.3);
  opacity: 1;
}

.hide {
  transition: 1s cubic-bezier(0.46, -0.44, 1, 1.3);
  opacity: 0;
}

/*----------------Arcs------------------*/

.addtocart {
  /* https://yqnn.github.io/svg-path-editor/ */
  animation: moveToCart 3s;
  offset-path: path("m 0 0 Z c 34 -89 114 -147 220 -140");
  transform-box: fill-box;
  transform-origin: center;
}

@keyframes moveToCart {
  0% {
    offset-distance: 0%;
  }
  100% {
    offset-distance: 100%;
  }
}

/*----------------Timing------------------*/
.linear {
  animation: leftToRight 3s linear infinite;
}

.ease {
  animation: leftToRight 3s ease infinite;
}

.ease-out {
  animation: leftToRight 3s ease-out infinite;
}

.ease-in {
  animation: leftToRight 3s ease-in infinite;
}

.ease-in-out {
  animation: leftToRight 3s ease-in-out infinite;
}

.steps {
  animation: leftToRight 3s steps(6) infinite;
}

@keyframes leftToRight {
  0% {
    transform: translateX(0);
  }
  90%,
  100% {
    transform: translateX(40vw);
  }
}
